name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  frontend:
    name: Frontend build (Vite)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect app directory
        id: detect
        shell: bash
        run: |
          if [ -f src-tauri/Cargo.toml ] && [ -f package.json ]; then
            echo "APP_DIR=." >> "$GITHUB_ENV"
          elif [ -f New-Android-debloater/src-tauri/Cargo.toml ] && [ -f New-Android-debloater/package.json ]; then
            echo "APP_DIR=New-Android-debloater" >> "$GITHUB_ENV"
          else
            echo "Could not find Tauri app (src-tauri/Cargo.toml)" >&2
            exit 1
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.APP_DIR }}/package-lock.json
      - name: Install deps
        working-directory: ${{ env.APP_DIR }}
        run: npm ci
      - name: Typecheck & build
        working-directory: ${{ env.APP_DIR }}
        run: npm run build

  rust:
    name: Rust build (Tauri backend)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-22.04
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Detect app directory
        id: detect
        shell: bash
        run: |
          if [ -f src-tauri/Cargo.toml ] && [ -f package.json ]; then
            echo "APP_DIR=." >> "$GITHUB_ENV"
          elif [ -f New-Android-debloater/src-tauri/Cargo.toml ] && [ -f New-Android-debloater/package.json ]; then
            echo "APP_DIR=New-Android-debloater" >> "$GITHUB_ENV"
          else
            echo "Could not find Tauri app (src-tauri/Cargo.toml)" >&2
            exit 1
          fi
      - name: Install Linux deps (Tauri)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            build-essential \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            libsoup2.4-dev \
            libglib2.0-dev \
            libjavascriptcoregtk-4.0-dev
      - name: Install Windows deps (NSIS & WiX)
        if: runner.os == 'Windows'
        run: choco install -y nsis wixtoolset
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
      ${{ env.APP_DIR }}/src-tauri
      - name: Cargo build (no bundle)
    run: cargo build --manifest-path ${{ env.APP_DIR }}/src-tauri/Cargo.toml --locked
